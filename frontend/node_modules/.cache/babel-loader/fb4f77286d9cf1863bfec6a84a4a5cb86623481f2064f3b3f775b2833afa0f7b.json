{"ast":null,"code":"var _jsxFileName = \"/home/xloop/Desktop/chat/frontend/src/component/Popchat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n//import the css here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopChat = props => {\n  _s();\n  // const [ msg, setMsg ] = useState([]);\n  let hide = {\n    display: 'none'\n  };\n  let show = {\n    display: 'block'\n  };\n  let textRef = /*#__PURE__*/React.createRef();\n  const {\n    messages\n  } = props;\n  console.log(messages);\n  const [chatopen, setChatopen] = useState(false);\n  const toggle = e => {\n    setChatopen(!chatopen);\n  };\n  const handleSend = e => {\n    const get = props.getMessage;\n    get(e.target.value);\n  };\n\n  // useEffect(() => {\n  //   if(messages){\n  //     setMsg(messages)\n  //   }\n  // },[messages])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chatCon\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"chat-box\",\n      style: chatopen ? show : hide,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header\",\n        children: \"Chat with me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"msg-area\",\n        children: (messages === null || messages === void 0 ? void 0 : messages.length) > 0 && messages.map((msg, i) => i % 2 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"right\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"left\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: textRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"pop\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: toggle,\n          src: \"https://p7.hiclipart.com/preview/151/758/442/iphone-imessage-messages-logo-computer-icons-message.jpg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(PopChat, \"ReqPnEi+gi8dLbRJjg/1RcMeii8=\");\n_c = PopChat;\nexport default PopChat;\n\n// src/components/PopChat.js\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios'; // Ensure you have axios installed\n\n// const PopChat = (props) => {\n//   let hide = { display: 'none' };\n//   let show = { display: 'block' };\n//   let textRef = React.createRef();\n//   const [chatopen, setChatopen] = useState(false);\n//   const [messages, setMessages] = useState(props.messages || []);\n\n//   useEffect(() => {\n//     // Load existing messages when the component mounts\n//     loadMessages();\n//   }, []);\n\n//   const loadMessages = async () => {\n//     try {\n//       const response = await axios.get('http://127.0.0.1:8000/answer/'); // Replace with your Django backend URL and endpoint for fetching messages\n//       setMessages(response.data);\n//     } catch (error) {\n//       console.error('Error fetching messages:', error);\n//     }\n//   };\n\n//   const toggle = () => {\n//     setChatopen(!chatopen);\n//   };\n\n//   // const handleSend = async () => {\n//   //   try {\n//   //     const message = textRef.current.value;\n//   //     const response = await axios.post('http://127.0.0.1:8000/answer/response/', { message }); // Replace with your Django backend URL and endpoint for sending messages\n//   //     if (response.status === 201) {\n//   //       setMessages([...messages, message]);\n//   //       textRef.current.value = ''; // Clear input after sending\n//   //     }\n//   //   } catch (error) {\n//   //     console.error('Error sending message:', error);\n//   //   }\n//   // };\n\n//   return (\n//     <div id='chatCon'>\n//       <div className=\"chat-box\" style={chatopen ? show : hide}>\n//         <div className=\"header\">Chat with me</div>\n//         <div className=\"msg-area\">\n//           {messages?.length > 0 &&\n//             messages.map((msg, i) => (\n//               i % 2 ? (\n//                 <p className=\"right\" key={i}><span>{msg}</span></p>\n//               ) : (\n//                 <p className=\"left\" key={i}><span>{msg}</span></p>\n//               )\n//             ))\n//           }\n//         </div>\n//         <div className=\"footer\">\n//           <input type=\"text\" ref={textRef} />\n//           <button onClick={handleSend}><i className=\"fa fa-paper-plane\"></i></button>\n//         </div>\n//       </div>\n//       <div className=\"pop\">\n//         <p><img onClick={toggle} src=\"https://p7.hiclipart.com/preview/151/758/442/iphone-imessage-messages-logo-computer-icons-message.jpg\" alt=\"\" /></p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PopChat;\nvar _c;\n$RefreshReg$(_c, \"PopChat\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PopChat","props","_s","hide","display","show","textRef","createRef","messages","console","log","chatopen","setChatopen","toggle","e","handleSend","get","getMessage","target","value","id","children","class","style","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","i","type","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["/home/xloop/Desktop/chat/frontend/src/component/Popchat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n//import the css here\n\nconst PopChat = ( props ) => {\n\n  // const [ msg, setMsg ] = useState([]);\n  let hide = {\n    display: 'none',\n  }\n  let show = {\n    display: 'block'\n  }\n  let textRef = React.createRef()\n  const {messages} = props\n  console.log(messages)\n\n  const [chatopen, setChatopen] = useState(false)\n  const toggle = e => {\n    setChatopen(!chatopen)\n  }\n\nconst handleSend = e => {\n  const get = props.getMessage\n  get(e.target.value)\n}\n\n// useEffect(() => {\n//   if(messages){\n//     setMsg(messages)\n//   }\n// },[messages])\n\n  return (\n    <div id='chatCon'>\n      <div class=\"chat-box\" style={chatopen ? show : hide}>\n    <div class=\"header\">Chat with me</div>\n    <div class=\"msg-area\">\n      {\n       messages?.length > 0 && messages.map((msg, i) => (\n          i%2 ? (\n          <p class=\"right\"><span>{ msg }</span></p>\n          ) : (\n            <p class=\"left\"><span>{ msg }</span></p>\n          )\n        ))\n      }\n\n    </div>\n    <div class=\"footer\">\n      <input type=\"text\"  onChange={textRef} />\n      <button onClick={handleSend}>send</button>\n    </div>\n  </div>\n    <div class=\"pop\">\n      <p><img onClick={toggle} src=\"https://p7.hiclipart.com/preview/151/758/442/iphone-imessage-messages-logo-computer-icons-message.jpg\" alt=\"\" /></p>\n    </div>\n    </div>\n  )\n}\n\nexport default PopChat  \n\n\n// src/components/PopChat.js\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios'; // Ensure you have axios installed\n\n// const PopChat = (props) => {\n//   let hide = { display: 'none' };\n//   let show = { display: 'block' };\n//   let textRef = React.createRef();\n//   const [chatopen, setChatopen] = useState(false);\n//   const [messages, setMessages] = useState(props.messages || []);\n\n//   useEffect(() => {\n//     // Load existing messages when the component mounts\n//     loadMessages();\n//   }, []);\n\n//   const loadMessages = async () => {\n//     try {\n//       const response = await axios.get('http://127.0.0.1:8000/answer/'); // Replace with your Django backend URL and endpoint for fetching messages\n//       setMessages(response.data);\n//     } catch (error) {\n//       console.error('Error fetching messages:', error);\n//     }\n//   };\n\n//   const toggle = () => {\n//     setChatopen(!chatopen);\n//   };\n\n//   // const handleSend = async () => {\n//   //   try {\n//   //     const message = textRef.current.value;\n//   //     const response = await axios.post('http://127.0.0.1:8000/answer/response/', { message }); // Replace with your Django backend URL and endpoint for sending messages\n//   //     if (response.status === 201) {\n//   //       setMessages([...messages, message]);\n//   //       textRef.current.value = ''; // Clear input after sending\n//   //     }\n//   //   } catch (error) {\n//   //     console.error('Error sending message:', error);\n//   //   }\n//   // };\n\n//   return (\n//     <div id='chatCon'>\n//       <div className=\"chat-box\" style={chatopen ? show : hide}>\n//         <div className=\"header\">Chat with me</div>\n//         <div className=\"msg-area\">\n//           {messages?.length > 0 &&\n//             messages.map((msg, i) => (\n//               i % 2 ? (\n//                 <p className=\"right\" key={i}><span>{msg}</span></p>\n//               ) : (\n//                 <p className=\"left\" key={i}><span>{msg}</span></p>\n//               )\n//             ))\n//           }\n//         </div>\n//         <div className=\"footer\">\n//           <input type=\"text\" ref={textRef} />\n//           <button onClick={handleSend}><i className=\"fa fa-paper-plane\"></i></button>\n//         </div>\n//       </div>\n//       <div className=\"pop\">\n//         <p><img onClick={toggle} src=\"https://p7.hiclipart.com/preview/151/758/442/iphone-imessage-messages-logo-computer-icons-message.jpg\" alt=\"\" /></p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PopChat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}