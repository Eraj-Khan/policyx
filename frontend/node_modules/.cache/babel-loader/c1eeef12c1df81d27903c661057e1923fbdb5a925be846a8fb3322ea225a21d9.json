{"ast":null,"code":"var _jsxFileName = \"/home/xloop/Desktop/chat/frontend/src/App.js\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg';\n// import PopChat from \"./component/Popchat.js\";\nimport PopChat from \"./component/Popchat\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([\n    // \"hggjmnb\",\n    // \"hggvjhghgj\",\n    // \"hello\",\n    // \"world\",\n  ]);\n  const [loading, setLoading] = useState(false);\n  const getMessage = value => {\n    setMessages(messages.push(value));\n  };\n  useEffect(() => {\n    console.log(messages);\n    if ((messages === null || messages === void 0 ? void 0 : messages.length) > 0) {\n      setLoading(true);\n    }\n  }, [messages]);\n  console.log(\"dssd\");\n  return loading && /*#__PURE__*/_jsxDEV(PopChat, {\n    messages: messages,\n    getMessage: getMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 21\n  }, this);\n}\n_s(App, \"UTLAkOdTUky7JqjNHrv4AQp1N+U=\");\n_c = App;\nexport default App;\n\n// src/App.js\n// import React, { useState, useEffect } from 'react';\n// import PopChat from './components/PopChat';  // Adjust the path based on your project structure\n\n// const App = () => {\n//   const [messages, setMessages] = useState([]);\n\n//   // Example function to handle receiving messages\n//   const handleMessageReceived = (newMessage) => {\n//     setMessages(prevMessages => [...prevMessages, newMessage]);\n//   };\n\n//   // Example useEffect to simulate receiving messages over time\n//   useEffect(() => {\n//     const simulateMessageReceive = () => {\n//       // Simulate receiving a message after 3 seconds\n//       setTimeout(() => {\n//         handleMessageReceived('New message received!');\n//       }, 3000);\n//     };\n\n//     // Call the simulateMessageReceive function\n//     simulateMessageReceive();\n//   }, []);\n\n//   return (\n//     <div>\n//       {/* Render other components or content as needed */}\n//       <h1>Your React App</h1>\n\n//       {/* Render the PopChat component and pass necessary props */}\n//       <PopChat messages={messages} getMessage={handleMessageReceived} />\n//     </div>\n//   );\n// };\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["PopChat","useEffect","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","loading","setLoading","getMessage","value","push","console","log","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/xloop/Desktop/chat/frontend/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\n// import PopChat from \"./component/Popchat.js\";\nimport PopChat from \"./component/Popchat\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [ messages, setMessages ] = useState([\n    // \"hggjmnb\",\n    // \"hggvjhghgj\",\n    // \"hello\",\n    // \"world\",\n  ]);\n\n  const [ loading, setLoading ] = useState(false)\n\n  const getMessage = (value) => {\n    setMessages(messages.push(value))\n  }\n\n  useEffect(()=>{\n    console.log(messages)\n    if(messages?.length > 0){\n      setLoading(true)\n    }\n  },[messages])\n\n  console.log(\"dssd\");\n  return loading && <PopChat messages={messages} getMessage={getMessage} />;\n}\n\nexport default App;\n\n// src/App.js\n// import React, { useState, useEffect } from 'react';\n// import PopChat from './components/PopChat';  // Adjust the path based on your project structure\n\n// const App = () => {\n//   const [messages, setMessages] = useState([]);\n\n//   // Example function to handle receiving messages\n//   const handleMessageReceived = (newMessage) => {\n//     setMessages(prevMessages => [...prevMessages, newMessage]);\n//   };\n\n//   // Example useEffect to simulate receiving messages over time\n//   useEffect(() => {\n//     const simulateMessageReceive = () => {\n//       // Simulate receiving a message after 3 seconds\n//       setTimeout(() => {\n//         handleMessageReceived('New message received!');\n//       }, 3000);\n//     };\n\n//     // Call the simulateMessageReceive function\n//     simulateMessageReceive();\n//   }, []);\n\n//   return (\n//     <div>\n//       {/* Render other components or content as needed */}\n//       <h1>Your React App</h1>\n\n//       {/* Render the PopChat component and pass necessary props */}\n//       <PopChat messages={messages} getMessage={handleMessageReceived} />\n//     </div>\n//   );\n// };\n\n// export default App;\n"],"mappings":";;AAAA;AACA;AACA,OAAOA,OAAO,MAAM,qBAAqB;AACzC,OAAO,WAAW;AAClB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAAEC,QAAQ,EAAEC,WAAW,CAAE,GAAGN,QAAQ,CAAC;IACzC;IACA;IACA;IACA;EAAA,CACD,CAAC;EAEF,MAAM,CAAEO,OAAO,EAAEC,UAAU,CAAE,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMS,UAAU,GAAIC,KAAK,IAAK;IAC5BJ,WAAW,CAACD,QAAQ,CAACM,IAAI,CAACD,KAAK,CAAC,CAAC;EACnC,CAAC;EAEDX,SAAS,CAAC,MAAI;IACZa,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC;IACrB,IAAG,CAAAA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAES,MAAM,IAAG,CAAC,EAAC;MACtBN,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC,EAAC,CAACH,QAAQ,CAAC,CAAC;EAEbO,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACnB,OAAON,OAAO,iBAAIL,OAAA,CAACJ,OAAO;IAACO,QAAQ,EAAEA,QAAS;IAACI,UAAU,EAAEA;EAAW;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3E;AAACd,EAAA,CAvBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAyBZ,eAAeA,GAAG;;AAElB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}