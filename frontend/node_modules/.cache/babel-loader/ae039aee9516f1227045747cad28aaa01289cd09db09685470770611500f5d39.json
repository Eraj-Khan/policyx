{"ast":null,"code":"var _jsxFileName = \"/home/xloop/Desktop/chat/frontend/src/App.js\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg';\n// import PopChat from \"./component/Popchat.js\";\nimport PopChat from \"./component/Popchat\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    value: \"How may I assist you?\",\n    type: \"aiResponse\"\n  }\n  // \"hggvjhghgj\",\n  // \"hello\",\n  // \"world\",\n  ]);\n  const [loading, setLoading] = useState(false);\n  const getMessage = value => {\n    setMessages([...messages, {\n      value,\n      type: 'query'\n    }]);\n    fetch(`http://127.0.0.1:8000/answer/?query=\"${value}\"`).then(response => response.json()).then(response => {\n      console.log(response);\n      setMessages([...messages, {\n        value: response.answer,\n        type: ''\n      }]);\n    });\n  };\n  useEffect(() => {\n    console.log(messages);\n    if ((messages === null || messages === void 0 ? void 0 : messages.length) > 0) {\n      setLoading(true);\n    }\n  }, [messages]);\n  console.log(\"dssd\");\n  return loading && /*#__PURE__*/_jsxDEV(PopChat, {\n    messages: messages,\n    getMessage: getMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 21\n  }, this);\n}\n_s(App, \"uXYBZcVrQbBX/Yjt2D9eyG8nWZc=\");\n_c = App;\nexport default App;\n\n// src/App.js\n// import React, { useState, useEffect } from 'react';\n// import PopChat from './components/PopChat';  // Adjust the path based on your project structure\n\n// const App = () => {\n//   const [messages, setMessages] = useState([]);\n\n//   // Example function to handle receiving messages\n//   const handleMessageReceived = (newMessage) => {\n//     setMessages(prevMessages => [...prevMessages, newMessage]);\n//   };\n\n//   // Example useEffect to simulate receiving messages over time\n//   useEffect(() => {\n//     const simulateMessageReceive = () => {\n//       // Simulate receiving a message after 3 seconds\n//       setTimeout(() => {\n//         handleMessageReceived('New message received!');\n//       }, 3000);\n//     };\n\n//     // Call the simulateMessageReceive function\n//     simulateMessageReceive();\n//   }, []);\n\n//   return (\n//     <div>\n//       {/* Render other components or content as needed */}\n//       <h1>Your React App</h1>\n\n//       {/* Render the PopChat component and pass necessary props */}\n//       <PopChat messages={messages} getMessage={handleMessageReceived} />\n//     </div>\n//   );\n// };\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["PopChat","useEffect","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","value","type","loading","setLoading","getMessage","fetch","then","response","json","console","log","answer","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/xloop/Desktop/chat/frontend/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\n// import PopChat from \"./component/Popchat.js\";\nimport PopChat from \"./component/Popchat\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    {\n      value: \"How may I assist you?\",\n      type: \"aiResponse\",\n    },\n    // \"hggvjhghgj\",\n    // \"hello\",\n    // \"world\",\n  ]);\n\n  const [loading, setLoading] = useState(false);\n\n  const getMessage = (value) => {\n    setMessages([...messages, {value, type: 'query'}]);\n    fetch(`http://127.0.0.1:8000/answer/?query=\"${value}\"`)\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(response);\n        setMessages([...messages, {value: response.answer, type: ''}]);\n      });\n  };\n\n  useEffect(() => {\n    console.log(messages);\n    if (messages?.length > 0) {\n      setLoading(true);\n    }\n  }, [messages]);\n\n  console.log(\"dssd\");\n  return loading && <PopChat messages={messages} getMessage={getMessage} />;\n}\n\nexport default App;\n\n// src/App.js\n// import React, { useState, useEffect } from 'react';\n// import PopChat from './components/PopChat';  // Adjust the path based on your project structure\n\n// const App = () => {\n//   const [messages, setMessages] = useState([]);\n\n//   // Example function to handle receiving messages\n//   const handleMessageReceived = (newMessage) => {\n//     setMessages(prevMessages => [...prevMessages, newMessage]);\n//   };\n\n//   // Example useEffect to simulate receiving messages over time\n//   useEffect(() => {\n//     const simulateMessageReceive = () => {\n//       // Simulate receiving a message after 3 seconds\n//       setTimeout(() => {\n//         handleMessageReceived('New message received!');\n//       }, 3000);\n//     };\n\n//     // Call the simulateMessageReceive function\n//     simulateMessageReceive();\n//   }, []);\n\n//   return (\n//     <div>\n//       {/* Render other components or content as needed */}\n//       <h1>Your React App</h1>\n\n//       {/* Render the PopChat component and pass necessary props */}\n//       <PopChat messages={messages} getMessage={handleMessageReceived} />\n//     </div>\n//   );\n// };\n\n// export default App;\n"],"mappings":";;AAAA;AACA;AACA,OAAOA,OAAO,MAAM,qBAAqB;AACzC,OAAO,WAAW;AAClB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CACvC;IACEO,KAAK,EAAE,uBAAuB;IAC9BC,IAAI,EAAE;EACR;EACA;EACA;EACA;EAAA,CACD,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMW,UAAU,GAAIJ,KAAK,IAAK;IAC5BD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAACE,KAAK;MAAEC,IAAI,EAAE;IAAO,CAAC,CAAC,CAAC;IAClDI,KAAK,CAAE,wCAAuCL,KAAM,GAAE,CAAC,CACpDM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEC,QAAQ,IAAK;MAClBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrBR,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAACE,KAAK,EAAEO,QAAQ,CAACI,MAAM;QAAEV,IAAI,EAAE;MAAE,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC;EACN,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdiB,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAAC;IACrB,IAAI,CAAAA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEc,MAAM,IAAG,CAAC,EAAE;MACxBT,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEdW,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACnB,OAAOR,OAAO,iBAAIP,OAAA,CAACJ,OAAO;IAACO,QAAQ,EAAEA,QAAS;IAACM,UAAU,EAAEA;EAAW;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3E;AAACnB,EAAA,CAhCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAkCZ,eAAeA,GAAG;;AAElB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}