{"ast":null,"code":"var _jsxFileName = \"/home/xloop/Desktop/chat/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PopChat from './components/PopChat'; // Adjust the path based on your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n\n  // Example function to handle receiving messages\n  const handleMessageReceived = newMessage => {\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n  };\n\n  // Example useEffect to simulate receiving messages over time\n  useEffect(() => {\n    const simulateMessageReceive = () => {\n      // Simulate receiving a message after 3 seconds\n      setTimeout(() => {\n        handleMessageReceived('New message received!');\n      }, 3000);\n    };\n\n    // Call the simulateMessageReceive function\n    simulateMessageReceive();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopChat, {\n      messages: messages,\n      getMessage: handleMessageReceived\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PopChat","jsxDEV","_jsxDEV","App","_s","messages","setMessages","handleMessageReceived","newMessage","prevMessages","simulateMessageReceive","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","getMessage","_c","$RefreshReg$"],"sources":["/home/xloop/Desktop/chat/frontend/src/App.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport PopChat from './components/PopChat';  // Adjust the path based on your project structure\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n\n  // Example function to handle receiving messages\n  const handleMessageReceived = (newMessage) => {\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n  };\n\n  // Example useEffect to simulate receiving messages over time\n  useEffect(() => {\n    const simulateMessageReceive = () => {\n      // Simulate receiving a message after 3 seconds\n      setTimeout(() => {\n        handleMessageReceived('New message received!');\n      }, 3000);\n    };\n\n    // Call the simulateMessageReceive function\n    simulateMessageReceive();\n  }, []);\n\n  return (\n    <div>\n      {/* Render other components or content as needed */}\n      <h1>Your React App</h1>\n\n      {/* Render the PopChat component and pass necessary props */}\n      <PopChat messages={messages} getMessage={handleMessageReceived} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,sBAAsB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMS,qBAAqB,GAAIC,UAAU,IAAK;IAC5CF,WAAW,CAACG,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAED,UAAU,CAAC,CAAC;EAC5D,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACd,MAAMW,sBAAsB,GAAGA,CAAA,KAAM;MACnC;MACAC,UAAU,CAAC,MAAM;QACfJ,qBAAqB,CAAC,uBAAuB,CAAC;MAChD,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;;IAED;IACAG,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAAU,QAAA,gBAEEV,OAAA;MAAAU,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGvBd,OAAA,CAACF,OAAO;MAACK,QAAQ,EAAEA,QAAS;MAACY,UAAU,EAAEV;IAAsB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAACZ,EAAA,CA9BID,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAgCT,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}